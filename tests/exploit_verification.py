
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.


import unittest
from framework import Query, Engine, Exploit
import logging
import config

logger = logging.getLogger("Run Verification Tests.")

class ExploitVerification(unittest.TestCase):

    def __init__(self, exploit):
        unittest.TestCase.__init__(self, methodName="runTest")

        self.exploit = exploit
        return

    def setUp(self):
        self.engine = Engine(self.exploit(), config)
        self.engine.startup()

    def tearDown(self):
        self.engine.shutdown()

    def runTest(self):
        self.engine.xdebug_autotrace_on()
        self.engine.exploit.exploit()
        self.engine.xdebug_autotrace_off()
        
        try:
            self.assertTrue(self.engine.exploit.verify(), msg="Verification failed for (%s):" % (self.engine.exploitname,))
        except NotImplementedError as e:
            self.fail(msg="verify method not implemented for (%s):" % (self.engine.exploitname,))
            
        return
            

if __name__ == '__main__':
    unittest.main()
