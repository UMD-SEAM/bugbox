<?xml version="1.0" encoding="UTF-8"?>

<deployment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:jboss:bean-deployer bean-deployer_1_0.xsd"
  xmlns="urn:jboss:bean-deployer">
  
  <bean name="KernelLocator" class="org.jboss.ws.integration.KernelLocator">
    <property name="kernel"><inject bean="jboss.kernel:service=Kernel"/></property>
  </bean>
  
  <bean name="ServiceEndpointManager" class="org.jboss.ws.core.server.ServiceEndpointManager">
    
    <!--
        The WSDL, that is a required deployment artifact for an endpoint, has a <soap:address>
        element which points to the location of the endpoint. JBoss supports rewriting of that SOAP address.
      
        If the content of <soap:address> is a valid URL, JBossWS will not rewrite it unless 'alwaysModifySOAPAddress' is true.
        If the content of <soap:address> is not a valid URL, JBossWS will rewrite it using the attribute values given below.
        
        If next line (webServiceHost) is commented, JBossWS uses requesters protocolo, host and port when rewriting the <soap:address>.
    -->
    <property name="webServiceHost">${jboss.bind.address}</property>
    <property name="alwaysModifySOAPAddress">true</property>
    
    <!-- 
      Set these properties to explicitly define the ports that will be used for rewriting the SOAP address.
      Otherwise the ports will be identified by querying the list of installed connectors. 
      If multiple connectors are found the port of the first connector is used.
      <property name="webServiceSecurePort">8443</property>
      <property name="webServicePort">8080</property>
    -->
    
    <property name="serviceEndpointInvokerJSE">org.jboss.ws.core.server.ServiceEndpointInvokerJSE</property>
    <property name="serviceEndpointInvokerEJB3">org.jboss.ws.integration.jboss42.ServiceEndpointInvokerEJB3</property>
    <property name="serviceEndpointInvokerEJB21">org.jboss.ws.integration.jboss42.ServiceEndpointInvokerEJB21</property>
    <property name="serviceEndpointInvokerMDB">org.jboss.ws.integration.jboss42.ServiceEndpointInvokerMDB</property>
  </bean>
  
  <bean name="ServiceEndpointDeployer" class="org.jboss.ws.core.server.ServiceEndpointDeployer">
    <property name="serviceEndpointManager">
      <inject bean="ServiceEndpointManager"/>
    </property>
  </bean>
  
  <bean name="ServiceEndpointPublisher" class="org.jboss.ws.integration.jboss42.ServiceEndpointPublisher">
    <property name="serviceEndpointServlet">org.jboss.ws.integration.jboss42.JBossServiceEndpointServlet</property>
  </bean>
  
  <!-- Bind Service objects in client environment context  -->
  <bean name="ServiceRefHandler" class="org.jboss.ws.core.client.ServiceRefHandlerImpl"/>
  
  <!-- A subscription manager for WS-Eventing -->
  <bean name="SubscriptionManager" class="org.jboss.ws.extensions.eventing.mgmt.SubscriptionManager"/>
  
  <bean name="ServerConfig" class="org.jboss.ws.integration.jboss42.ServerConfigImpl"/>

  <bean name="DeploymentInfoAdapter" class="org.jboss.ws.integration.jboss42.DeploymentInfoAdapter">
    <property name="applicationMetaDataAdapter">
      <inject bean="ApplicationMetaDataAdapter"/>
    </property>
    <property name="webMetaDataAdapter">
      <inject bean="WebMetaDataAdapter"/>
    </property>
  </bean>
  <bean name="ApplicationMetaDataAdapter" class="org.jboss.ws.integration.jboss42.ApplicationMetaDataAdapter"/>
  <bean name="WebMetaDataAdapter" class="org.jboss.ws.integration.jboss42.WebMetaDataAdapter"/>
    
</deployment>
